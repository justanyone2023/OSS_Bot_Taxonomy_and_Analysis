"Document Title",Authors,"Author Affiliations","Publication Title",Date Added To Xplore,"Publication Year","Volume","Issue","Start Page","End Page","Abstract","ISSN",ISBNs,"DOI",Funding Information,PDF Link,"Author Keywords","IEEE Terms","Mesh_Terms",Article Citation Count,Patent Citation Count,"Reference Count","License",Online Date,Issue Date,"Meeting Date","Publisher",Document Identifier
"Should I Stale or Should I Close? An Analysis of a Bot That Closes Abandoned Issues and Pull Requests","M. Wessel; I. Steinmacher; I. Wiese; M. A. Gerosa","University of Sao Paulo, Sao Paulo, SP, Brazil; Northern Arizona University, Flagstaff, AZ, USA; Fed. Univ. of Technology, Parana, Campo Mourao, PR, Brazil; Northern Arizona University, Flagstaff, AZ, USA","2019 IEEE/ACM 1st International Workshop on Bots in Software Engineering (BotSE)","5 Sep 2019","2019","","","38","42","On GitHub, projects use bots to automate predefined and repetitive tasks related to issues and pull requests. Our research investigates the adoption of the stale bot, which helps maintainers triaging abandoned issues and pull requests. We analyzed the bots' configuration settings and their modifications over time. These settings define the time for tagging issues and pull request as stale and closing them. We collected data from 765 OSS projects hosted on GitHub. Our results indicate that most of the studied projects made no more than three modifications in the configurations file, issues tagged as bug reports are exempt from being considered stale, while the same occurs with pull requests that need some input to be processed.","","978-1-7281-2262-5","10.1109/BotSE.2019.00018","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8823598","bots, open source software, abandoned issues","Computer bugs;Bot (Internet);Task analysis;Open source software;Labeling;Tagging;Indexes","","21","","20","IEEE","5 Sep 2019","","","IEEE","IEEE Conferences"
"Optimizing Workflow for Elite Developers: Perspectives on Leveraging SE Bots","Z. Wang; Y. Wang; D. Redmiles","University of California, Irvine, USA; Beijing University of Posts and Telecommunications, China; University of California, Irvine, USA","2023 IEEE/ACM 5th International Workshop on Bots in Software Engineering (BotSE)","27 Jul 2023","2023","","","23","27","Small-scale automation services in Software Engineering, known as SE Bots, have gradually infiltrated every aspect of daily software development with the goal of enhancing productivity and well-being. While leading the OSS development, elite developers have often burned out from holistic responsibilities in projects and looked for automation support. Building on prior research in BotSE and our interviews with elite developers, this paper discusses how to design and implement SE bots that integrate into the workflows of elite developers and meet their expectations. We present six main design guidelines for implementing SE bots for elite developers, based on their concerns about noise, security, simplicity, and other factors. Additionally, we discuss the future directions of SE bots, especially in supporting elite developers’ increasing workload due to rising demands.","","979-8-3503-0212-7","10.1109/BotSE59190.2023.00013","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10190405","Software Engineering;SE Bots;OSS;Elite Developers","Productivity;Automation;Design methodology;Conferences;Buildings;Chatbots;Software","","1","","21","IEEE","27 Jul 2023","","","IEEE","IEEE Conferences"
"Effects of Adopting Code Review Bots on Pull Requests to OSS Projects","M. Wessel; A. Serebrenik; I. Wiese; I. Steinmacher; M. A. Gerosa","University of São Paulo, Brazil; Eindhoven University of Technology, The Netherlands; Universidade Tecnológica Federal do Paraná, Campo Mourão, Brazil; Universidade Tecnológica Federal do Paraná, Campo Mourão, Brazil; Northern Arizona University, USA","2020 IEEE International Conference on Software Maintenance and Evolution (ICSME)","2 Nov 2020","2020","","","1","11","Software bots, which are widely adopted by Open Source Software (OSS) projects, support developers on several activities, including code review. However, as with any new technology adoption, bots may impact group dynamics. Since understanding and anticipating such effects is important for planning and management, we investigate how several activity indicators change after the adoption of a code review bot. We employed a regression discontinuity design on 1,194 software projects from GitHub. Our results indicate that the adoption of code review bots increases the number of monthly merged pull requests, decreases monthly non-merged pull requests, and decreases communication among developers. Practitioners and maintainers may leverage our results to understand, or even predict, bot effects on their projects' social interactions.","2576-3148","978-1-7281-5619-4","10.1109/ICSME46990.2020.00011","Coordenação de Aperfeiçoamento de Pessoal de Nível Superior; National Science Foundation; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9240622","Software Bots;GitHub Bots;Code Review;Open Source Software;Software Engineering","Bot (Internet);Software maintenance;Encoding;Data models;Planning;Open source software;Software development management","","31","","41","IEEE","2 Nov 2020","","","IEEE","IEEE Conferences"
"Bots for Pull Requests: The Good, the Bad, and the Promising","M. Wessel; A. Abdellatif; I. Wiese; T. Conte; E. Shihab; M. A. Gerosa; I. Steinmacher","Delft University of Technology, Netherlands; Concordia University, Canada; Universidade Tecnologica Federal do Parana, Brazil; Federal University of Amazonas, Brazil; Concordia University, Canada; Northern Arizona University, USA; Universidade Tecnologica Federal do Parana, Brazil","2022 IEEE/ACM 44th International Conference on Software Engineering (ICSE)","20 Jun 2022","2022","","","274","286","Software bots automate tasks within Open Source Software (OSS) projects' pull requests and save reviewing time and effort (“the good”). However, their interactions can be disruptive and noisy and lead to information overload (“the bad”). To identify strategies to overcome such problems, we applied Design Fiction as a participatory method with 32 practitioners. We elicited 22 design strategies for a bot mediator or the pull request user interface (“the promising”). Participants envisioned a separate place in the pull request interface for bot interactions and a bot mediator that can summarize and customize other bots' actions to mitigate noise. We also collected participants' perceptions about a prototype implementing the envisioned strategies. Our design strategies can guide the development of future bots and social coding platforms.","1558-1225","978-1-4503-9221-1","10.1145/3510003.3512765","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9793907","Software Bots;GitHub Bots;Human-bot Interaction;Open Source Software;Automation;Collaborative Development;Design Fiction","Bot (Internet);Prototypes;User interfaces;Encoding;Noise measurement;Task analysis;Open source software","","6","","69","CCBY","20 Jun 2022","","","IEEE","IEEE Conferences"
"Improving Feedback on GitHub Pull Requests: A Bots Approach","Z. Hu; E. F. Gehringer","Department of Computer Science, North Carolina State University, Raleigh, USA; Department of Computer Science, North Carolina State University, Raleigh, USA","2019 IEEE Frontiers in Education Conference (FIE)","12 Mar 2020","2019","","","1","9","Rising enrollments make it difficult for instructors and teaching assistants to give adequate feedback on each student's work. Our course projects require students to submit GitHub pull requests as deliverables for their open-source software (OSS) projects. We have set up a static code analyzer and a continuous integration service on GitHub to help students check different aspects of the code. However, these tools have some limitations. In this paper, we discuss how we bypass the limitations of existing tools by implementing three Internet bots. These bots are either open source or free for OSS projects and can be easily integrated with any GitHub repositories. One-hundred one Computer Science and Computer Engineering masters students participated in our study. The survey results showed that more than 84% of students thought bots can help them to contribute code with better quality. We analyzed 396 pull requests. Results revealed that bots can provide more timely feedback than teaching staff. The Danger Bot is associated with a significant reduction system-specific guideline violations (by 39%), and the Code Climate Bot is associated with a significant 60% decrease of code smells in student contributions. However, we found that the Travis CI Bot did not help student contributions pass automated tests.","2377-634X","978-1-7281-1746-1","10.1109/FIE43999.2019.9028685","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9028685","Internet bots;open-source software;software engineering;open-source curriculum;automated feedback;Expertiza","Tools;Bot (Internet);Meteorology;Guidelines;Education;Programming","","6","","17","IEEE","12 Mar 2020","","","IEEE","IEEE Conferences"
"From Specialized Mechanics to Project Butlers: The Usage of Bots in Open Source Software Development","Z. Wang; Y. Wang; D. Redmiles","University of California, Irvine; University of Posts and Telecommunications, Beijing; University of California, Irvine","IEEE Software","23 Aug 2022","2022","39","5","38","43","We seek to identify how open source software (OSS) projects adopt bot services from a diverse set of selections. Our empirical research examines bot usage in the most popular OSS repositories in GitHub.","1937-4194","","10.1109/MS.2022.3180297","National Natural Science Foundation of China(grant numbers:62172049); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9789275","","Software development management;Bot (Internet);Task analysis;Software;Codes;Automation;Protocols","","5","","11","CCBY","6 Jun 2022","","","IEEE","IEEE Magazines"
"Detecting and Characterizing Bots that Commit Code","T. Dey; S. Mousavi; E. Ponce; T. Fry; B. Vasilescu; A. Filippova; A. Mockus","The University of Tennessee, Knoxville, TN, USA; The University of Tennessee, Knoxville, TN, USA; The University of Tennessee, Knoxville, TN, USA; The University of Tennessee, Knoxville, TN, USA; Carnegie Mellon University, Pittsburgh, PA, USA; Github, San Francisco, CA, USA; The University of Tennessee, Knoxville, TN, USA","2020 IEEE/ACM 17th International Conference on Mining Software Repositories (MSR)","20 Jun 2023","2020","","","209","219","Background: Some developer activity traditionally performed manually, such as making code commits, opening, managing, or closing issues is increasingly subject to automation in many OSS projects. Specifically, such activity is often performed by tools that react to events or run at specific times. We refer to such automation tools as bots and, in many software mining scenarios related to developer productivity or code quality, it is desirable to identify bots in order to separate their actions from actions of individuals. Aim: Find an automated way of identifying bots and code committed by these bots, and to characterize the types of bots based on their activity patterns. Method and Result: We propose BIMAN, a systematic approach to detect bots using author names, commit messages, files modified by the commit, and projects associated with the commits. For our test data, the value for AUC-ROC was 0.9. We also characterized these bots based on the time patterns of their code commits and the types of files modified, and found that they primarily work with documentation files and web pages, and these files are most prevalent in HTML and JavaScript ecosystems. We have compiled a shareable dataset containing detailed information about 461 bots we found (all of which have more than 1000 commits) and 13,762,430 commits they created.","2574-3864","978-1-4503-7517-7","10.1145/3379597.3387478","NSF(grant numbers:CNS-1925615,IIS-1633437,IIS-1901102,1717415,1901311); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10148716","bots;automated commits;random forest;ensemble model;social coding platforms;software engineering","Productivity;Codes;Automation;Systematics;Social networking (online);Web pages;Chatbots","","25","","49","","20 Jun 2023","","","IEEE","IEEE Conferences"
"Between JIRA and GitHub: ASFBot and its Influence on Human Comments in Issue Trackers","A. Moharil; D. Orlov; S. Jameel; T. Trouwen; N. Cassee; A. Serebrenik","Eindhoven University of Technology, Eindhoven, The Netherlands; Eindhoven University of Technology, Eindhoven, The Netherlands; Eindhoven University of Technology, Eindhoven, The Netherlands; Eindhoven University of Technology, Eindhoven, The Netherlands; Eindhoven University of Technology, Eindhoven, The Netherlands; Eindhoven University of Technology, Eindhoven, The Netherlands","2022 IEEE/ACM 19th International Conference on Mining Software Repositories (MSR)","21 Jun 2022","2022","","","112","116","Open-Source Software (OSS) projects have adopted various automations for repetitive tasks in recent years. One common type of automation in OSS is bots. In this exploratory case study, we seek to understand how the adoption of one particular bot (ASFBot) by the Apache Software Foundation (ASF) impacts the discussions in the issue-trackers of these projects. We use the SmartShark dataset to investigate whether the ASFBot affects (i) human comments mentioning pull requests and fixes in issue comments and (ii) the general human comment rate on issues. We apply a regression discontinuity design (RDD) on nine ASF projects that have been active both before and after the ASFBot adoption. Our results indicate (i) an immediate decrease in the number of median comments mentioning pull requests and fixes after the bot adoption, but the trend of a monthly decrease in this comment count is reversed, and (ii) no effect in the number of human comments after the bot adoption. We make an effort to gather first insights in understanding the impact of adopting the ASFBot on the commenting behavior of developers who are working on ASF projects.","2574-3864","978-1-4503-9303-4","10.1145/3524842.3528528","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9796306","bots;ASFBot;issue-trackers;Apache","Bot (Internet);Automation;Market research;Behavioral sciences;Data mining;Task analysis;Open source software","","1","","30","CCBY","21 Jun 2022","","","IEEE","IEEE Conferences"
"Recommending Good First Issues in GitHub OSS Projects","W. Xiao; H. He; W. Xu; X. Tan; J. Dong; M. Zhou","Key Laboratory of High Confidence Software Technologies, Ministry of Education, School of Computer Science, Peking University, Beijing, China; Key Laboratory of High Confidence Software Technologies, Ministry of Education, School of Computer Science, Peking University, Beijing, China; School of Computer Science and Technology, Soochow University, Suzhou, China; Key Laboratory of High Confidence Software Technologies, Ministry of Education, School of Computer Science, Peking University, Beijing, China; Key Laboratory of High Confidence Software Technologies, Ministry of Education, School of Computer Science, Peking University, Beijing, China; Key Laboratory of High Confidence Software Technologies, Ministry of Education, School of Computer Science, Peking University, Beijing, China","2022 IEEE/ACM 44th International Conference on Software Engineering (ICSE)","20 Jun 2022","2022","","","1830","1842","Attracting and retaining newcomers is vital for the sustainability of an open-source software project. However, it is difficult for new-comers to locate suitable development tasks, while existing “Good First Issues” (GFI) in GitHub are often insufficient and inappropriate. In this paper, we propose RECGFI, an effective practical approach for the recommendation of good first issues to newcomers, which can be used to relieve maintainers' burden and help newcomers onboard. RECGFI models an issue with features from multiple dimensions (content, background, and dynamics) and uses an XGBoost classifier to generate its probability of being a GFI. To evaluate RECGFI, we collect 53,510 resolved issues among 100 GitHub projects and care-fully restore their historical states to build ground truth datasets. Our evaluation shows that RECGFI can achieve up to 0.853 AUC in the ground truth dataset and outperforms alternative models. Our interpretable analysis of the trained model further reveals in-teresting observations about GFI characteristics. Finally, we report latest issues (without GFI-signaling labels but recommended as GFI by our approach) to project maintainers among which 16 are confirmed as real GFIs and five have been resolved by a newcomer.","1558-1225","978-1-4503-9221-1","10.1145/3510003.3510196","National Key R&D Program of China(grant numbers:2018YFB1004201); National Natural Science Foundation of China(grant numbers:61825201); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9793998","open-source software;onboarding;good first issues","Bot (Internet);Analytical models;Machine learning;Task analysis;Sustainable development;Open source software;Software development management","","8","","67","CCBY","20 Jun 2022","","","IEEE","IEEE Conferences"
"Understanding the Time to First Response in GitHub Pull Requests","K. A. Hasan; M. Macedo; Y. Tian; B. Adams; S. Ding","School of Computing, Queen’s University, Kingston, ON, Canada; School of Computing, Queen’s University, Kingston, ON, Canada; School of Computing, Queen’s University, Kingston, ON, Canada; School of Computing, Queen’s University, Kingston, ON, Canada; School of Computing, Queen’s University, Kingston, ON, Canada","2023 IEEE/ACM 20th International Conference on Mining Software Repositories (MSR)","12 Jul 2023","2023","","","1","11","The pull-based development is widely adopted in modern open-source software (OSS) projects, where developers propose changes to the codebase by submitting a pull request (PR). However, due to many reasons, PRs in OSS projects frequently experience delays across their lifespan, including prolonged waiting times for the first response. Such delays may significantly impact the efficiency and productivity of the development process, as well as the retention of new contributors as long-term contributors.In this paper, we conduct an exploratory study on the time-to-first-response for PRs by analyzing 111,094 closed PRs from ten popular OSS projects on GitHub. We find that bots frequently generate the first response in a PR, and significant differences exist in the timing of bot-generated versus human-generated first responses. We then perform an empirical study to examine the characteristics of bot- and human-generated first responses, including their relationship with the PR’s lifetime. Our results suggest that the presence of bots is an important factor contributing to the time-to-first-response in the pull-based development paradigm, and hence should be separately analyzed from human responses. We also report the characteristics of PRs that are more likely to experience long waiting for the first human-generated response. Our findings have practical implications for newcomers to understand the factors contributing to delays in their PRs.","2574-3864","979-8-3503-1184-6","10.1109/MSR59073.2023.00015","Natural Sciences and Engineering Research Council of Canada; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10173964","pull request;first response;latency analysis;fine-grained analysis;code review","Productivity;Focusing;Chatbots;Delays;Time factors;Data mining;Open source software","","","","32","IEEE","12 Jul 2023","","","IEEE","IEEE Conferences"
"Exploring Activity and Contributors on GitHub: Who, What, When, and Where","X. Xia; Z. Weng; W. Wang; S. Zhao","Data Science and Engineering, East China Normal University, Shanghai, China; Data Science and Engineering, East China Normal University, Shanghai, China; Data Science and Engineering, East China Normal University, Shanghai, China; School of Electronic and Information Engineering, Tongji University, Shanghai, China","2022 29th Asia-Pacific Software Engineering Conference (APSEC)","16 Feb 2023","2022","","","11","20","Apart from being a code hosting platform, GitHub is the place where large-scale open collaborations and contributions happen. Every minute, thousands of developers are submitting code, having discussions of issues or pull requests, with all user behaviors recorded in the GitHub Event Stream (GES). Exploration of the activities in the GES could help understand who is active, the way they work, the time when they are active and even their location. To this end, a large-scale analysis was initially performed based on the 0.86 billion event records generated in 2020. We extracted 902K active contributors out of 14 million GitHub accounts by observing their activity distribution, then explored their behavior distribution, active time in the day and week, and estimated time zone distributions on the basis of their circadian activity rhythm. To go deeper, a case study of 79 projects in CNCF and contrast analyses of different project maturity levels were conducted. Our results showed that from a macro perspective, bots are increasingly more active and can serve numerous projects. Contributors work on weekdays, and are globally more inclined toward the daytime working hours in the Americas and Europe. The time zone distribution also reveals that UTC+2 and UTC-4 have the most active contributors. A critical discovery was the validation and quantification of a high bus factor risk exists in the OSS ecosystem. Whether from a large group point of view or within specific projects, a rather small group of OSS contributors (less than 20%) undertook the majority of the work. The GES can provide a wealth of information about open source software (OSS). Our findings provide insights into global GitHub collaboration behaviors and may be of help for researchers and practitioners to further understand modern OSS ecosystem.","2640-0715","978-1-6654-5537-4","10.1109/APSEC57359.2022.00013","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10043221","GitHub behavior data;Contributor Activity;Open Source Collaboration","Codes;Ecosystems;Collaboration;Venture capital;Germanium;Chatbots;Rhythm","","2","","44","IEEE","16 Feb 2023","","","IEEE","IEEE Conferences"
"Android botnets on the rise: Trends and characteristics","H. Pieterse; M. S. Olivier","Defence, Peace, Safety and Security, Council of Scientific and Industrial Research, Pretoria, South Africa; Department of Computer Science, University of Pretoria, Pretoria, South Africa","2012 Information Security for South Africa","4 Oct 2012","2012","","","1","5","Smartphones are the latest technology trend of the 21st century. Today's social expectation of always staying connected and the need for an increase in productivity are the reasons for the increase in smartphone usage. One of the leaders of the smartphone evolution is Google's Android Operating System (OS). The openness of the design and the ease of customizing are the aspects that are placing Android ahead of the other smartphone OSs. Such popularity has not only led to an increase in Android usage but also to the rise of Android malware. Although such malware is not having a significant impact on the popularity of Android smartphones, it is however creating new possibilities for threats. One such threat is the impact of botnets on Android smartphones. Recently, malware has surfaced that revealed specific characteristics relating to traditional botnet activities. Malware such as Geinimi, Pjapps, DroidDream, and RootSmart all display traditional botnet functionalities. These malicious applications show that Android botnets is a reality. From a security perspective it is important to understand the underlying structure of an Android botnet. This paper evaluates Android malware with the purpose of identifying specific trends and characteristics relating to botnet behaviour. The botnet trends and characteristics are detected by a comprehensive literature study of well-known Android malware applications. The identified characteristics are then further explored in terms of the Android Botnet Development Model and the Android Botnet Discovery Process. The common identified trends and characteristics aid the understanding of Android botnet activities as well as the possible discovery of an Android bot.","2330-9881","978-1-4673-2159-4","10.1109/ISSA.2012.6320432","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6320432","Android;botnet;malware;application;trends;characteristics","Androids;Humanoid robots;Smart phones;Malware;Market research;Servers","","47","5","21","IEEE","4 Oct 2012","","","IEEE","IEEE Conferences"
